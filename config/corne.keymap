/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF_LY 0
#define NUM_LY 1
#define NAV_LY 2
#define MSE_LY 3
#define BLT_LY 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | none |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | none |
// | none |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  | ; : | none |
// | none |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  | , < | . > | / ? | none |
//                    |NAVLY|LSHFT| SPC |   | ENT | BKSP|NUMLY|
                        bindings = <
    &none &kp Q &kp W &kp E &kp R &kp T      &kp Y &kp U  &kp I     &kp O   &kp P    &none
    &none &kp A &kp S &kp D &kp F &kp G      &kp H &kp J  &kp K     &kp L   &kp SEMI &none
    &none &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
         &mo NAV_LY &kp LSHFT &kp SPACE      &kp RET &kp BKSP &mo NUM_LY 
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------------
// | none | ESC |  (  |  )  | \ | | ` ~ |                      |  +  |  7  |  8  |  9  |  0  | none |
// | none | TAB |  {  |  }  | ' " |  _  |                      |  -  |  4  |  5  |  6  |  =  | none |
// | none | ALT |  [  |  ]  |LCTRL| LGUI|                      |  *  |  1  |  2  |  3  |  ^  | none |
//                    |MSELY|LSHFT| SPC |                      | ENT | BKSP|NUMLY|
                        bindings = <
    &none  &kp ESC  &kp LPAR  &kp RPAR &kp BSLH  &kp GRAVE     &kp PLUS  &kp N7     &kp N8   &kp N9    &kp N0    &none
    &none  &kp TAB  &kp LBRC  &kp RBRC &kp APOS  &kp DEL       &kp MINUS &kp N4     &kp N5   &kp N6    &kp EQUAL &none
    &none  &sk LALT &kp LBKT  &kp RBKT &sk LCTRL &sk LGUI      &kp STAR  &kp N1     &kp N2   &kp N3    &kp CARET &none
                              &to 3 &kp LSHFT    &kp SPACE     &kp RET   &kp BKSP   &mo NUM_LY
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | none | ESC |  @  |  #  |  $  |  %  |        | DEL | HOME| PGDN| PGUP| END | none |
// | none | TAB |     |     |     |     |        | INS | LEFT| DOWN|  UP |RIGHT| none |
// | none | ALT |     |     |     |     |        |     |     |     |NUMLK|CAPLK| none |
//                    |NAVLY|LSHFT| SPC |        | ENT | BKSP|BLTLY|
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                
                mouse_layer {
// -----------------------------------------------------------------------------------------
// | none | ESC |  @  |  #  |  $  |  %  |        | DEL | HOME| PGDN| PGUP| END | none |
// | none | TAB |     |     |     |     |        | INS |MSELT|MSEDN|MSEUP|MSERT| none |
// | none | ALT |     |     |     |     |        |     |     |     |NUMLK|CAPLK| none |
//                    |NAVLY|LSHFT| SPC |        | ENT | BKSP|BLTLY|
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp none 
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &mmv MOUSE_LEFT &mmv MOUSE_DOWN  &mmv MOUSE_UP &mmv MOUSE_RIGHT &kp none 
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp none 
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

        };
};
